
import java.awt.HeadlessException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JTextField;


public class LoginUi extends javax.swing.JFrame {

    /**
     * Creates new form LoginUi
     */
    public LoginUi() {
        initComponents();
        /*
        Hides error messages if fields are not empty   
        */
        jname.setVisible(false);
        jemail.setVisible(false);
        jsurname.setVisible(false);
        jdob.setVisible(false);
        jgender.setVisible(false);
        jusername.setVisible(false);
        jpasswd.setVisible(false);
        jrepasswd.setVisible(false);   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        fName = new javax.swing.JTextField();
        sName = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        usrName = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jmale = new javax.swing.JRadioButton();
        jfemale = new javax.swing.JRadioButton();
        signButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        passwd = new javax.swing.JPasswordField();
        rePasswd = new javax.swing.JPasswordField();
        jname = new javax.swing.JLabel();
        jsurname = new javax.swing.JLabel();
        jemail = new javax.swing.JLabel();
        jpasswd = new javax.swing.JLabel();
        jrepasswd = new javax.swing.JLabel();
        jusername = new javax.swing.JLabel();
        jDate = new com.toedter.calendar.JDateChooser();
        jdob = new javax.swing.JLabel();
        jgender = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Sign Up");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Username:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("First name:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Surname:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Email:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Password:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Re-enter Password:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Gender:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Date of Birth:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Personal Details:");

        fName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fNameActionPerformed(evt);
            }
        });

        sName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sNameActionPerformed(evt);
            }
        });

        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("now choose a username & password:");

        usrName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usrNameActionPerformed(evt);
            }
        });

        jmale.setText("Male");
        jmale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmaleActionPerformed(evt);
            }
        });

        jfemale.setText("Female");
        jfemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jfemaleActionPerformed(evt);
            }
        });

        signButton.setText("Sign Up");
        signButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        passwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwdActionPerformed(evt);
            }
        });

        rePasswd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rePasswdActionPerformed(evt);
            }
        });

        jname.setForeground(new java.awt.Color(255, 0, 51));
        jname.setText(":Enter a valid name");

        jsurname.setForeground(new java.awt.Color(255, 51, 0));
        jsurname.setText(": Enter a valid surname");

        jemail.setForeground(new java.awt.Color(255, 51, 0));
        jemail.setText(":Enter valid Email");

        jpasswd.setForeground(new java.awt.Color(255, 0, 0));
        jpasswd.setText(":Enter password");

        jrepasswd.setForeground(new java.awt.Color(255, 0, 0));
        jrepasswd.setText(":Re-enter password");

        jusername.setForeground(new java.awt.Color(255, 0, 0));
        jusername.setText(":Enter username");

        jDate.setDateFormatString("yyyy-MM-dd");

        jdob.setForeground(new java.awt.Color(255, 0, 0));
        jdob.setText(":Enter valid date");

        jgender.setForeground(new java.awt.Color(255, 0, 0));
        jgender.setText(":Please select gender");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fName, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                    .addComponent(sName))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jname, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jsurname, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jmale)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jfemale))
                                    .addComponent(jDate, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jemail)
                                    .addComponent(jgender)
                                    .addComponent(jdob)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(passwd, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                                    .addComponent(rePasswd)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(usrName)
                                        .addGap(32, 32, 32)))
                                .addGap(85, 85, 85)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jpasswd)
                                        .addComponent(jusername))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jrepasswd)
                                        .addGap(1, 1, 1))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(181, 181, 181)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel11)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(38, 38, 38))
            .addComponent(jSeparator3)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(signButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancelButton)
                .addGap(72, 72, 72))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(fName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jname))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jsurname))))
                    .addComponent(sName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jemail))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jmale)
                    .addComponent(jfemale)
                    .addComponent(jgender))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel11)
                                        .addGap(32, 32, 32)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel2)
                                            .addComponent(usrName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jusername))
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel6))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(passwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jpasswd)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jrepasswd)))
                            .addComponent(rePasswd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cancelButton)
                                    .addComponent(signButton))
                                .addGap(26, 26, 26))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jdob)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sNameActionPerformed

    private void fNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fNameActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:  
    }//GEN-LAST:event_emailActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here: 
    }//GEN-LAST:event_formWindowOpened

     
   /*
        method that checks if both the entered passwords match return true if they do  
        */
    public boolean passwordMatch(String password, String repassword){
    if(password.equals(repassword))
    { return true;
    }
    return false;
    }

    
    /*
        method that checks if all fields are entered and valid.
        */
    public  boolean checkEntered(String date){
    boolean valid = false;
    boolean emptyText = false;
    String fname = fName.getText();
    String sname = sName.getText();
   /// checks that the fields are valid and non empty
    if(fName.getText().equals("")||fName.getText().isEmpty()||!fname.matches("^[a-zA-Z]+$")){ jname.setVisible(true);
    emptyText =true;}
    if(email.getText().equals("")||email.getText().isEmpty()){   jemail.setVisible(true);
    emptyText =true;}
    if(sName.getText().equals("")||sName.getText().isEmpty()||!sname.matches("^[a-zA-Z]+$")){  jsurname.setVisible(true);
    emptyText =true;}
    if(date == null){jdob.setVisible(true);
    emptyText =true;}
    if(gender.equals("")){jgender.setVisible(true);
    emptyText =true;}
    if(usrName.getText().equals("")||usrName.getText().isEmpty()){  jusername.setVisible(true);
    emptyText =true;}
    if(passwd.getPassword().equals("")||passwd.getPassword().length == 0){  jpasswd.setVisible(true);
    emptyText =true;}
    if(rePasswd.getPassword().equals("")||rePasswd.getPassword().length == 0){  jrepasswd.setVisible(true);
    emptyText =true;}
    
    if(!emptyText ){
    valid = true;
    //System.out.println("Everything is entered");
    }
    return valid;
    }
    
    /*
       check if email is a valid one
        */
    
    public boolean checkEmail(String emailaddress){
   
    Pattern p = Pattern.compile("[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}");
    Matcher m = p.matcher(emailaddress);

    if(m.matches()&& email!=null){
      //System.out.println("Valid email address");
        jemail.setVisible(false);
        return true;
        }
    else{
    // System.out.println("NOT VALID email address");
        jemail.setVisible(true);
        return false;
        }
   
   
   
   }
     /*
       method that checks if password matches the password policy
        */
    
    public static boolean isAccepteable(String password){
    if (password.isEmpty()) {
        JOptionPane.showMessageDialog(null,"Please enter a password.");
        return false;
    }
    password = password.trim();
    int passwdlen = password.length();
    if(passwdlen < MIN_PASSWD || passwdlen > MAX_PASSWD) {
        JOptionPane.showMessageDialog(null,"The password must be between 8 to 20 characters");
        return false;
    }
    
     char[] pass = password.toCharArray();
    for(char c : pass) {
        
        if (Character.isLowerCase(c)) {
            lowCase++;
        } else
            
        if (Character.isUpperCase(c)) {
            upCase++;
        } else
            
        if (Character.isDigit(c)) {     
            digits++;
        } else
            
        if (specialChar.indexOf(String.valueOf(c)) >= 0) {
            specChar++; 
        } else {
            JOptionPane.showMessageDialog(null,c + " Invalid character");
            return false;
        }
    }
    
    if(lowCase == 0 || digits == 0 || specChar == 0||upCase ==0){
    
        JOptionPane.showMessageDialog(null,"Include a-z, A-Z, 0-9 and symbols for a stronger password");
        return false;
    }
    else
    {
    //System.out.printf("Good Password");

    return true;
    }
    
    }
    
    // method that checks if the length of name and surname is greater than 1.
    public static boolean isAccepteableLength(String name){
    if(name.length()>1)
        return true;
    return false;
    }
     
   
    private void signButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signButtonActionPerformed
        // TODO add your handling code here:
        String date = ((JTextField)jDate.getDateEditor().getUiComponent()).getText();
        String firstname = fName.getText();
        String surname = sName.getText();
        String emailaddress = email.getText();
        String gender = "";
        boolean userexists= false;
        boolean emailexists= false;
        
        if (jmale.isSelected()) {
            gender = "male";
        } else {
            gender = "female";
        }
        
        String username = usrName.getText();
        String password = String.valueOf(passwd.getPassword());
        String reppasswd = String.valueOf(rePasswd.getPassword());
        String emailadd = email.getText();
        
        boolean passwdmatch = passwordMatch(password,reppasswd);// check if password match
        boolean allfilled = checkEntered(date);//check if all fields are entered
        boolean validemail = checkEmail(emailadd);// check the email is valid
        boolean validPasswd = isAccepteable(password);// check if password matches the password policy
        boolean checkfirstname = isAccepteableLength(firstname);// check if firstname is accepteable length
        boolean checksurname = isAccepteableLength(surname);// check if surname is accepteable length
       Connection conn = null;
       PreparedStatement pstmt=null;
       try{
       Class.forName("com.mysql.jdbc.Driver");
       conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/login1","root","20041994");// connects to the database
       Statement stmt = conn.createStatement();
       String SQL = "SELECT * FROM detail WHERE username='"+username+"'";
       String SQL1 ="SELECT * FROM detail WHERE email='"+emailadd+"'";
        ResultSet rs = stmt.executeQuery(SQL);
       
        if(rs.next()){///echeck if username exists in the database
         JOptionPane.showMessageDialog(null,"Username Exists please enter a different one");
         userexists = true;
        }
        
         ResultSet rs1 = stmt.executeQuery(SQL1);
         if(rs1.next()){// checks if email exists in teh database
         JOptionPane.showMessageDialog(null,"Email Exists please enter a different one");
         emailexists = true;
        }
        
        // check if firstname and surname are greater than 1 character.
        if(!checkfirstname||!checksurname){
            jname.setVisible(true);
            jsurname.setVisible(true);
            JOptionPane.showMessageDialog(null,"Firstname and Surname must be more than 1 character");
        
        }
        
      if(passwdmatch&&allfilled&&validemail&&validPasswd&&!userexists&&!emailexists&&checkfirstname&&checksurname){
       
           
        MessageDigest md = MessageDigest.getInstance("SHA-256");
        MessageDigest us = MessageDigest.getInstance("SHA-256");
            md.update(password.getBytes());
            us.update(username.getBytes());
            byte bytePass[] = md.digest();
            byte byteUser[] = us.digest();
            StringBuffer stringB = new StringBuffer();
           
           
          for (int i = 0; i < bytePass.length || i < byteUser.length; i++) {
         stringB.append(Integer.toString(((bytePass[i]+byteUser[i]) & 0xff) + 0x100, 16).substring(1));        
    }   
           
           
         JOptionPane.showMessageDialog(null,"Hash Password: "+stringB.toString() );
           
           
           
       //Inserts details into the database.
       pstmt = conn.prepareStatement("insert into detail (username,firstname,surname,gender,password,dob,email)values(?,?,?,?,?,?,?)");
        pstmt.setString(1,username);
        pstmt.setString(2,firstname);
        pstmt.setString(3,surname);
        pstmt.setString(4, gender);
        pstmt.setString(5, stringB.toString());
        pstmt.setString(6,((JTextField)jDate.getDateEditor().getUiComponent()).getText());
        pstmt.setString(7, emailaddress);
        
        int i = pstmt.executeUpdate();
         
        if(i>0){
        //JOptionPane.showMessageDialog(null," Data Saved");
        }
        else{
       // JOptionPane.showMessageDialog(null,"Data is not saved");
        }
        
        
        
        }
     
       }catch( HeadlessException | ClassNotFoundException | SQLException e){
       JOptionPane.showMessageDialog(null, e);
       } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(LoginUi.class.getName()).log(Level.SEVERE, null, ex);
        }
            
       
      
    

    }//GEN-LAST:event_signButtonActionPerformed

    private void jmaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmaleActionPerformed
        // TODO add your handling code here:
        jfemale.setSelected(false);
        gender = "male";
    }//GEN-LAST:event_jmaleActionPerformed

    private void jfemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jfemaleActionPerformed
        // TODO add your handling code here:
        jmale.setSelected(false);
        gender = "female";
    }//GEN-LAST:event_jfemaleActionPerformed

    private void usrNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usrNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usrNameActionPerformed

    private void passwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwdActionPerformed

    private void rePasswdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rePasswdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rePasswdActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        
        
        LoginUser s = new LoginUser();
       s.setVisible(true);
       dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])  {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginUi().setVisible(true);
            }
        });
        
        
        
        
    }
    
    
    public String gender ="";
    public static boolean accept = false;
    public static final String specialChar = "!@#$%^&*()~`-=_+[]{}|:\";',./<>?";
    public static final int MIN_PASSWD = 8;
    public static final int MAX_PASSWD = 20;
    public static int upCase = 0;
    public static int lowCase = 0;
    public static int digits = 0;
    public static int specChar = 0; 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField email;
    private javax.swing.JTextField fName;
    private com.toedter.calendar.JDateChooser jDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel jdob;
    private javax.swing.JLabel jemail;
    private javax.swing.JRadioButton jfemale;
    private javax.swing.JLabel jgender;
    private javax.swing.JRadioButton jmale;
    private javax.swing.JLabel jname;
    private javax.swing.JLabel jpasswd;
    private javax.swing.JLabel jrepasswd;
    private javax.swing.JLabel jsurname;
    private javax.swing.JLabel jusername;
    private javax.swing.JPasswordField passwd;
    private javax.swing.JPasswordField rePasswd;
    private javax.swing.JTextField sName;
    private javax.swing.JButton signButton;
    private javax.swing.JTextField usrName;
    // End of variables declaration//GEN-END:variables
}
